package Vistas;

import Entidades.*;
import conexion.*;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.time.*;
import java.util.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MascotaVistaAlt extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel(){
        
        public boolean isCellEditable (int c , int f) {
            return false;
        }        
    };
    private DefaultTableModel modelov2 = new DefaultTableModel(){
        
        public boolean isCellEditable (int c , int f) {
            return false;
        }        
    };

    ClienteData cd = new ClienteData();
    MascotaData md = new MascotaData();
    VisitaData vd = new VisitaData();
    
    public MascotaVistaAlt() {
        initComponents();
        cargarClientes();
        armarCabecera();
        armarOtraCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboxClientes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMascotas = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTTratamientoMascotas = new javax.swing.JTable();
        jBtra = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 0, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cboxClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new Cliente[] {  }));
        cboxClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxClientesItemStateChanged(evt);
            }
        });
        cboxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxClientesActionPerformed(evt);
            }
        });
        jPanel1.add(cboxClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 270, -1));

        jtMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Alias", "Sexo", "Especie", "Raza", "Pelaje", "Fecha Nac.", "Peso Actual", "Peso Medio"
            }
        ));
        jtMascotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMascotasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtMascotas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 640, 130));

        jTTratamientoMascotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTTratamientoMascotas);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 640, 150));

        jBtra.setText("VER TRATAMIENTOS");
        jBtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtraActionPerformed(evt);
            }
        });
        jPanel1.add(jBtra, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxClientesItemStateChanged

    }//GEN-LAST:event_cboxClientesItemStateChanged

    private void cboxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxClientesActionPerformed
        borrarFilas();
        Cliente cliente = (Cliente) cboxClientes.getSelectedItem();
        List<Mascota> mascotaLista = md.buscarMascotaXCliente(cliente.getIdCliente());

        for (Mascota mascota : mascotaLista) {
            try {
                modelo.addRow(new Object[]{
                    mascota.getIdMascota(),
                    mascota.getSexo(),
                    mascota.getEspecie(),
                    mascota.getRaza(),
                    mascota.getColor(),
                    mascota.getfNac(),
                    mascota.getPesoActual(),
                    mascota.getPesoMedio()
                });

            } catch (NullPointerException e) {

            }
        }

    }//GEN-LAST:event_cboxClientesActionPerformed

    private void jtMascotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMascotasMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jtMascotasMouseClicked

    private void jBtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtraActionPerformed
        // TODO add your handling code here:
       
        DefaultTableModel modelov2 = (DefaultTableModel) jTTratamientoMascotas.getModel();

        int b = jtMascotas.getSelectedRow();
        System.out.println(b);
        if (b >= 0 && b < jtMascotas.getRowCount()) {
            DefaultTableModel model = (DefaultTableModel) jtMascotas.getModel();
            Object a = model.getValueAt(b, 0);
            System.out.println(a);
            

            List<Visitas> vLista = vd.listarVisitas((int) a);

            for (Visitas visita : vLista) {
                modelov2.addRow(new Object[]{
                    visita.getFechaVisita(),
                    visita.getIdTratamiento()
                });
            }
        }


    }//GEN-LAST:event_jBtraActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Cliente> cboxClientes;
    private javax.swing.JButton jBtra;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTTratamientoMascotas;
    private javax.swing.JTable jtMascotas;
    // End of variables declaration//GEN-END:variables
private void cargarClientes() {
        cboxClientes.removeAllItems();
        Cliente aux = new Cliente();
        cboxClientes.addItem(aux);
        for (Cliente c : cd.listarClientes()) {
            cboxClientes.addItem(c);
        }
    }

    private void armarCabecera() {
        modelo.addColumn("ID");
        modelo.addColumn("Sexo");
        modelo.addColumn("Especie");
        modelo.addColumn("Raza");
        modelo.addColumn("Pelaje");
        modelo.addColumn("Fecha Nac");
        modelo.addColumn("Peso Actual");
        modelo.addColumn("Peso Medio");
        jtMascotas.setModel(modelo);
    }
    
    private void armarOtraCabecera() {
        modelov2.addColumn("Fecha");
        modelov2.addColumn("Tratamiento");
        jTTratamientoMascotas.setModel(modelov2);
    }

    private void borrarFilas() {
        int filas = modelo.getRowCount() - 1;
        for (; filas >= 0; filas--) {
            modelo.removeRow(filas);
        }
    }
    
    private void borrarFilas2() {
        int filas = modelo.getRowCount() - 1;
        for (; filas >= 0; filas--) {
            modelov2.removeRow(filas);
        }
    }

}
